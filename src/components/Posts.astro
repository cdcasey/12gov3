---
import { getCollection } from 'astro:content';
import PostBanner from './PostBanner.astro';
// import type { Post } from '../content.config';

// interface Post {
// 	id: number;
// 	title: {
// 		rendered: string;
// 	};
// 	excerpt: {
// 		rendered: string;
// 	};
// 	date: string;
// 	_embedded: {
// 		'wp:featuredmedia': {
// 			source_url: string;
// 		}[];
// 	};
// 	slug: string;
// 	content: {
// 		rendered: string;
// 	};
// }
//
// export type Posts = Post[];
// interface Props {
// 	tags?: number[];
// }

const { tags } = Astro.props;
// const res = await fetch('https://12go.onetogrowonpod.com/wp-json/wp/v2/posts?per_page=100');
// const res = await fetch(
// 	'https://12go.onetogrowonpod.com/wp-json/wp/v2/posts?_embed&_fields=author,id,excerpt,title,link,_embed,featured_media,date',
// );

// We can't build up with new URL() because there's no way to append _embed as a valueless param
let API_URL = 'https://12go.onetogrowonpod.com/wp-json/wp/v2/posts?_embed';

if (tags) {
	API_URL += `&tags=${tags.join(',')}`;
}

const res = await fetch(API_URL);

if (!res.ok) {
	console.log(res);
}
// const posts1: Posts = await res.json();

const posts = await getCollection('posts');
console.log(posts[0]);
// console.log(posts.length);
---

<section class="post-grid">
	{
		posts.map((post) => {
			/* maybe refactor to use class:lists */
			const bgUrl = post.data.coverImage ? `url(${post.data.coverImage.src})` : 'none';
			return (
				<div>
					<a class="post-link" style={{ backgroundImage: bgUrl }} href={post.data.slug}>
						<PostBanner title={post.data.title} date={post.data.date} />
					</a>
					{/* <Image src={post._embedded['wp:featuredmedia']['0'].source_url} alt="" inferSize={true} /> */}
					<p class="post-excerpt" set:html={post.data.excerpt} />
				</div>
			);
		})
	}
</section>

<style>
	.post-grid {
		@apply grid gap-8 md:grid-cols-2 lg:grid-cols-3;
	}
	.post-link {
		@apply flex h-52 items-center justify-center rounded bg-cover;
	}
	.post-excerpt {
		@apply text-sm;
	}
</style>
